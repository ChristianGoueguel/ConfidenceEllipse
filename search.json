[{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 ConfidenceEllipse authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/articles/confidence-ellipse.html","id":"coordinate-points","dir":"Articles","previous_headings":"","what":"Coordinate points","title":"Confidence Ellipse","text":"confidence_ellipse function used compute coordinate points confidence ellipse ellipse plotted two-dimensional plot x y data. Points lie within ellipse considered part underlying distribution specified confidence level conf_level.","code":"ellipse99 <- confidence_ellipse(glass, x = SiO2, y = Al2O3, conf_level = 0.99) ellipse95 <- confidence_ellipse(glass, x = SiO2, y = Al2O3, conf_level = 0.95) ellipse90 <- confidence_ellipse(glass, x = SiO2, y = Al2O3, conf_level = 0.90) ellipse99_rob <- confidence_ellipse(glass, x = SiO2, y = Al2O3, conf_level = 0.99, robust = TRUE) ellipse95_rob <- confidence_ellipse(glass, x = SiO2, y = Al2O3, conf_level = 0.95, robust = TRUE) ellipse90_rob <- confidence_ellipse(glass, x = SiO2, y = Al2O3, conf_level = 0.90, robust = TRUE) ellipse99 %>% glimpse() #> Rows: 361 #> Columns: 2 #> $ x <dbl> 54.39806, 54.39735, 54.40034, 54.40703, 54.41742, 54.43149, 54.44926… #> $ y <dbl> 2.798453, 2.771520, 2.744243, 2.716628, 2.688685, 2.660423, 2.631849… ggplot() +   geom_path(data = ellipse99, aes(x = x, y = y), color = \"red\", linewidth = 0.7, linetype = \"dashed\") +   geom_path(data = ellipse95, aes(x = x, y = y), color = \"blue\", linewidth = 0.7, linetype = \"dashed\") +   geom_path(data = ellipse90, aes(x = x, y = y), color = \"green\", linewidth = 0.7, linetype = \"dashed\") +   geom_path(data = ellipse99_rob, aes(x = x, y = y), color = \"red\", linewidth = 1L, linetype = \"solid\") +   geom_path(data = ellipse95_rob, aes(x = x, y = y), color = \"blue\", linewidth = 1L, linetype = \"solid\") +   geom_path(data = ellipse90_rob, aes(x = x, y = y), color = \"green\", linewidth = 1L, linetype = \"solid\") +   geom_point(data = glass, aes(x = SiO2, y = Al2O3), fill = \"grey\", color = \"black\", shape = 21, size = 3L) +   annotate(\"text\", x = 70, y = 3.5, label = \"Classical confidence ellipses\", color = \"black\", size = 4) +   annotate(\"text\", x = 74, y = 2.3, label = \"Robust confidence ellipses\", color = \"black\", size = 4) +   scale_color_brewer(palette = \"Set1\", direction = 1) +   xlim(50, 80) +   ylim(-.5, 5) +   labs(     x = \"SiO2 (wt.%)\",      y = \"Al2O3 (wt.%)\",     title = \"Confidence ellipses\",     caption = \"     Figure 1: Comparison between classical and robust confidence ellipse.\"     ) +   theme_bw() +   theme(     aspect.ratio = .7,     panel.grid = element_blank(),     legend.position = \"none\"     )"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/articles/confidence-ellipse.html","id":"group-based-confidence-ellipses","dir":"Articles","previous_headings":"","what":"Group-based confidence ellipses","title":"Confidence Ellipse","text":"grouping bivariate data, .group_by argument can used data contains unique grouping variable (.group_by = NULL default). grouping variable provided, function compute ellipses separately level factor. ’s important note grouping variable appropriately coded factor passing .group_by argument. variable currently stored character numeric type, may need convert factor using functions like .factor() forcats::as_factor(). function includes distribution argument allows users choose two statistical approaches ellipse calculation: “normal” (default): Uses chi-square distribution quantile “hotelling”: Uses Hotelling’s T² distribution quantile  shown comparative plots, difference approaches can substantial, especially smaller sample sizes. Hotelling’s T² ellipses provide realistic confidence regions properly account fact ’re estimating population parameters sample data. sample size increases differences approaches diminish.","code":"ellipse_grp <- confidence_ellipse(glass, x = SiO2, y = Na2O, .group_by = glassType) ellipse_grph <- confidence_ellipse(glass, x = SiO2, y = Na2O, .group_by = glassType, distribution = \"hotelling\") ellipse_grp %>% print() #> # A tibble: 1,444 × 3 #>        x     y glassType #>    <dbl> <dbl> <fct>     #>  1  59.6  14.7 1         #>  2  59.6  14.7 1         #>  3  59.6  14.6 1         #>  4  59.6  14.5 1         #>  5  59.6  14.5 1         #>  6  59.6  14.4 1         #>  7  59.6  14.3 1         #>  8  59.6  14.3 1         #>  9  59.7  14.2 1         #> 10  59.7  14.1 1         #> # ℹ 1,434 more rows ellipse_grph %>% print() #> # A tibble: 1,444 × 3 #>        x     y glassType #>    <dbl> <dbl> <fct>     #>  1  59.5  14.7 1         #>  2  59.5  14.7 1         #>  3  59.5  14.6 1         #>  4  59.5  14.5 1         #>  5  59.5  14.5 1         #>  6  59.5  14.4 1         #>  7  59.5  14.3 1         #>  8  59.5  14.3 1         #>  9  59.6  14.2 1         #> 10  59.6  14.1 1         #> # ℹ 1,434 more rows p1 <- ggplot() +   geom_polygon(data = ellipse_grp, aes(x = x, y = y, fill = glassType), color= \"black\", alpha = .45) +   geom_point(data = glass, aes(x = SiO2, y = Na2O, color = glassType, shape = glassType), size = 3L) +   scale_fill_brewer(palette = \"Set1\", direction = 1) +   scale_color_brewer(palette = \"Set1\", direction = 1) +   labs(     x = \"SiO2 (wt.%)\",      y = \"Na2O (wt.%)\"     ) +   theme_bw() +   theme(     panel.grid = element_blank(),     legend.position = \"none\"     ) p2 <- ggplot() +   geom_polygon(data = ellipse_grph, aes(x = x, y = y, fill = glassType), color= \"black\", alpha = .45) +   geom_point(data = glass, aes(x = SiO2, y = Na2O, color = glassType, shape = glassType), size = 3L) +   scale_fill_brewer(palette = \"Set1\", direction = 1) +   scale_color_brewer(palette = \"Set1\", direction = 1) +   labs(     x = \"SiO2 (wt.%)\",      y = \"Na2O (wt.%)\",     caption = \"     Figure 2: Comparison between normal distribution (left) and Hotelling's T² distribution (right) ellipses.\"     ) +   theme_bw() +   theme(     panel.grid = element_blank(),     legend.position = \"none\"     ) patchwork::wrap_plots(p1, p2, ncol = 2) +   patchwork::plot_annotation(     title = \"Statistically-based confidence ellipses drawn around each group\",     theme = theme(plot.title = element_text(hjust = 0.5))   )"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/articles/confidence-ellipsoid.html","id":"coordinate-points","dir":"Articles","previous_headings":"","what":"Coordinate points","title":"Confidence Ellipsoid","text":"confidence_ellipsoid function accepts x, y z input variables computes coordinate points ellipsoid specified confidence level conf_level.","code":"ellipsoid <- glass %>%    confidence_ellipsoid(x = SiO2, y = Na2O, z = Fe2O3, conf_level = 0.95) ellipsoid %>% glimpse() #> Rows: 2,500 #> Columns: 3 #> $ x <dbl> 66.54472, 66.54472, 66.54472, 66.54472, 66.54472, 66.54472, 66.54472… #> $ y <dbl> 12.55263, 12.55263, 12.55263, 12.55263, 12.55263, 12.55263, 12.55263… #> $ z <dbl> 0.6815153, 0.6815153, 0.6815153, 0.6815153, 0.6815153, 0.6815153, 0.… rgl::setupKnitr(autoprint = TRUE) rgl::plot3d(   x = ellipsoid$x,    y = ellipsoid$y,    z = ellipsoid$z,   xlab = \"SiO2 (wt.%)\",    ylab = \"Na2O (wt.%)\",    zlab = \"Fe2O3 (wt.%)\",   type = \"l\",    radius = .05,   col = \"darkgrey\"   ) rgl::points3d(   x = glass$SiO2,    y = glass$Na2O,    z = glass$Fe2O3,    col = \"darkred\",   size = 5   ) rgl::view3d(zoom = .8)"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/articles/confidence-ellipsoid.html","id":"grouping","dir":"Articles","previous_headings":"","what":"Grouping","title":"Confidence Ellipsoid","text":"grouping trivariate data, .group_by argument can used data contains unique grouping variable (.group_by = NULL default). grouping variable provided, function compute ellipsoid separately level factor. ’s important note grouping variable appropriately coded factor passing .group_by argument.","code":"ellipsoid_grp <- glass %>%    confidence_ellipsoid(x = SiO2, y = Na2O, z = Fe2O3, .group_by = glassType, conf_level = 0.95) ellipsoid_grp %>% glimpse() #> Rows: 10,000 #> Columns: 4 #> $ x         <dbl> 67.32486, 67.32486, 67.32486, 67.32486, 67.32486, 67.32486, … #> $ y         <dbl> 14.51964, 14.51964, 14.51964, 14.51964, 14.51964, 14.51964, … #> $ z         <dbl> 0.5971494, 0.5971494, 0.5971494, 0.5971494, 0.5971494, 0.597… #> $ glassType <fct> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … rgl::setupKnitr(autoprint = TRUE) rgl::plot3d(   x = ellipsoid_grp$x,    y = ellipsoid_grp$y,    z = ellipsoid_grp$z,   xlab = \"SiO2 (wt.%)\",    ylab = \"Na2O (wt.%)\",    zlab = \"Fe2O3 (wt.%)\",   type = \"s\",    radius = .03,   col = as.numeric(ellipsoid_grp$glassType)   ) rgl::points3d(   x = glass$SiO2,    y = glass$Na2O,    z = glass$Fe2O3,    col = as.numeric(glass$glassType),   size = 5   ) rgl::view3d(zoom = .8)"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christian L. Goueguel. Author, maintainer.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Goueguel C (2025). ConfidenceEllipse: Computation 2D 3D Elliptical Joint Confidence Regions. R package version 1.1.0, https://christiangoueguel.github.io/ConfidenceEllipse/.","code":"@Manual{,   title = {ConfidenceEllipse: Computation of 2D and 3D Elliptical Joint Confidence Regions},   author = {Christian L. Goueguel},   year = {2025},   note = {R package version 1.1.0},   url = {https://christiangoueguel.github.io/ConfidenceEllipse/}, }"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/index.html","id":"section","dir":"","previous_headings":"","what":"Computation of 2D and 3D Elliptical Joint Confidence Regions","title":"Computation of 2D and 3D Elliptical Joint Confidence Regions","text":"ConfidenceEllipse package computes coordinate points confidence region given bivariate trivariate dataset. size elliptical region determined confidence level, shape determined covariance matrix. confidence level usually chosen 95% 99%, resulting confidence region contains points expected lie within multivariate distribution.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Computation of 2D and 3D Elliptical Joint Confidence Regions","text":"can install ConfidenceEllipse CRAN using: Alternatively can grab development version github using devtools:","code":"install.packages(\"ConfidenceEllipse\") install.packages(\"devtools\") devtools::install_github(\"ChristianGoueguel/ConfidenceEllipse\")"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Computation of 2D and 3D Elliptical Joint Confidence Regions","text":"","code":"library(magrittr) library(tidyselect) library(patchwork) library(dplyr) library(ggplot2) library(purrr) library(tidyr) library(ConfidenceEllipse)"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/index.html","id":"dataset","dir":"","previous_headings":"Example","what":"Dataset","title":"Computation of 2D and 3D Elliptical Joint Confidence Regions","text":"dataset comprised 13 different measurements 180 archaeological glass vessels different groups (Janssen, K.H.., De Raedt, ., Schalm, O., Veeckman, J.: Microchim. Acta 15 (suppl.) (1998) 253-267. Compositions 15th - 17th century archaeological glass vessels excavated Antwerp.)","code":"data(\"glass\", package = \"ConfidenceEllipse\") glass %>% glimpse() #> Rows: 180 #> Columns: 14 #> $ glassType <fct> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, … #> $ Na2O      <dbl> 13.904, 14.194, 14.668, 14.800, 14.078, 13.600, 12.942, 15.6… #> $ MgO       <dbl> 2.244, 2.184, 3.034, 2.455, 2.480, 1.648, 2.690, 2.028, 2.25… #> $ Al2O3     <dbl> 1.312, 1.310, 1.362, 1.385, 1.072, 2.012, 1.420, 1.242, 1.07… #> $ SiO2      <dbl> 67.752, 67.076, 63.254, 63.790, 68.768, 69.628, 64.012, 70.6… #> $ P2O5      <dbl> 0.884, 0.938, 0.988, 1.200, 0.682, 0.698, 0.966, 0.210, 0.75… #> $ SO3       <dbl> 0.052, 0.024, 0.064, 0.115, 0.070, 0.038, 0.046, 0.310, 0.03… #> $ Cl        <dbl> 0.936, 0.966, 0.886, 0.988, 0.966, 0.908, 0.896, 0.676, 0.93… #> $ K2O       <dbl> 3.044, 3.396, 2.828, 2.878, 2.402, 3.196, 2.526, 2.326, 2.32… #> $ CaO       <dbl> 8.784, 8.636, 11.088, 10.833, 8.808, 6.160, 12.982, 6.324, 9… #> $ MnO       <dbl> 0.674, 0.698, 1.240, 0.978, 0.310, 1.170, 0.874, 0.214, 0.60… #> $ Fe2O3     <dbl> 0.364, 0.336, 0.400, 0.433, 0.242, 0.650, 0.516, 0.278, 0.25… #> $ BaO       <dbl> 0.040, 0.040, 0.046, 0.025, 0.022, 0.156, 0.014, 0.032, 0.02… #> $ PbO       <dbl> 0.004, 0.198, 0.134, 0.120, 0.102, 0.136, 0.120, 0.062, 0.02…"},{"path":[]},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/index.html","id":"classical-and-robust-confidence-ellipses","dir":"","previous_headings":"Example > Confidence Region","what":"Classical and robust confidence ellipses","title":"Computation of 2D and 3D Elliptical Joint Confidence Regions","text":"First, confidence_ellipse function used compute coordinate points confidence ellipse ellipse plotted two-dimensional plot x y data. Points lie outside ellipse considered outliers, points lie within ellipse considered part underlying distribution specified confidence level conf_level.","code":"ellipse_95 <- confidence_ellipse(glass, x = SiO2, y = Na2O, conf_level = 0.95) rob_ellipse_95 <- confidence_ellipse(glass, x = SiO2, y = Na2O, conf_level = 0.95, robust = TRUE) ellipse_95 %>% glimpse() #> Rows: 361 #> Columns: 2 #> $ x <dbl> 74.45896, 74.35724, 74.25314, 74.14669, 74.03792, 73.92686, 73.81356… #> $ y <dbl> 21.99964, 22.08244, 22.16235, 22.23932, 22.31335, 22.38440, 22.45245… cutoff <- qchisq(0.95, df = 2)  MDsquared <- glass %>%   select(SiO2, Na2O) %>%   as.matrix() %>%   mahalanobis(colMeans(.), cov(.), inverted = FALSE) plot1 <-    ggplot() +   geom_path(data = ellipse_95, aes(x = x, y = y), color = \"blue\", linewidth = 1L) +   geom_point(data = glass %>% mutate(md = MDsquared) %>% filter(md <= cutoff), aes(x = SiO2, y = Na2O), shape = 21L, color = \"black\", fill = \"lightblue\", size = 3L) +   geom_point(data = glass %>% mutate(md = MDsquared) %>% filter(md > cutoff), aes(x = SiO2, y = Na2O), shape = 21L, color = \"black\", fill = \"gold\", size = 3L) +   labs(x = \"SiO2 (wt.%)\", y = \"Na2O (wt.%)\", title = \"Classical confidence ellipse\\nat 95% confidence level\") +   theme_bw() +   theme(     panel.grid = element_blank(),     legend.position = \"none\"     ) x_mcd <- glass %>%   select(SiO2, Na2O) %>%   as.matrix() %>%   robustbase::covMcd() rob_MDsquared <- glass %>%   select(SiO2, Na2O) %>%   as.matrix() %>%   mahalanobis(x_mcd$center, x_mcd$cov) plot2 <-    ggplot() +   geom_path(data = rob_ellipse_95, aes(x = x, y = y), color = \"blue\", linewidth = 1L) +   geom_point(data = glass %>% mutate(md = rob_MDsquared) %>% filter(md <= cutoff), aes(x = SiO2, y = Na2O), shape = 21L, color = \"black\", fill = \"lightblue\", size = 3L) +   geom_point(data = glass %>% mutate(md = rob_MDsquared) %>% filter(md > cutoff), aes(x = SiO2, y = Na2O), shape = 21L, color = \"black\", fill = \"gold\", size = 3L) +   labs(x = \"SiO2 (wt.%)\", y = \"Na2O (wt.%)\", title = \"Robust confidence ellipse\\nat 95% confidence level\") +   theme_bw() +   theme(     panel.grid = element_blank(),     legend.position = \"none\"     ) plot1 | plot2"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/index.html","id":"grouping","dir":"","previous_headings":"Example > Confidence Region > Classical and robust confidence ellipses","what":"Grouping","title":"Computation of 2D and 3D Elliptical Joint Confidence Regions","text":"grouping bivariate data, .group_by argument can used data contains unique grouping variable (.group_by = NULL default). grouping variable provided, function compute ellipses separately level factor, allowing explore potential differences patterns within subgroups data. ’s important note grouping variable appropriately coded factor passing .group_by argument. variable currently stored character numeric type, may need convert factor using functions like .factor() forcats::as_factor().","code":"rpca_scores <- glass %>%   select(where(is.numeric) )%>%    pcaPP::PCAproj(method = \"qn\") %>%   pluck(\"scores\") %>%   as_tibble() %>%   mutate(glassType = glass %>% pull(glassType)) %>%   rename(PC1 = Comp.1, PC2 = Comp.2) ellipse_pca <- rpca_scores %>% confidence_ellipse(x = PC1, y = PC2, .group_by = glassType) ggplot() +   geom_point(data = rpca_scores, aes(x = PC1, y = PC2, color = glassType, shape = glassType), size = 3L) +   geom_path(data = ellipse_pca, aes(x = x, y = y, color = glassType), linewidth = 1L) +   scale_color_brewer(palette = \"Set1\", direction = 1) +   labs(x = \"PC1\", y = \"PC2\", title = \"Principal component analysis\") +   theme_bw() +   theme(     aspect.ratio = .7,     panel.grid = element_blank(),     legend.position = \"none\"     )"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/index.html","id":"ellipsoid","dir":"","previous_headings":"Example > Confidence Region","what":"Ellipsoid","title":"Computation of 2D and 3D Elliptical Joint Confidence Regions","text":"confidence_ellipsoid function accepts additional variable z computes ellipsoid trivariate data.","code":"ellipsoid_grp <- glass %>% confidence_ellipsoid(SiO2, Na2O, Fe2O3, glassType) ellipsoid_grp %>% glimpse() #> Rows: 10,000 #> Columns: 4 #> $ x         <dbl> 67.32486, 67.32486, 67.32486, 67.32486, 67.32486, 67.32486, … #> $ y         <dbl> 14.51964, 14.51964, 14.51964, 14.51964, 14.51964, 14.51964, … #> $ z         <dbl> 0.5971494, 0.5971494, 0.5971494, 0.5971494, 0.5971494, 0.597… #> $ glassType <fct> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … rgl::setupKnitr(autoprint = TRUE) rgl::plot3d(   x = ellipsoid_grp$x,    y = ellipsoid_grp$y,    z = ellipsoid_grp$z,   xlab = \"SiO2 (wt.%)\",    ylab = \"Na2O (wt.%)\",    zlab = \"Fe2O3 (wt.%)\",   type = \"s\",    radius = 0.03,   col = as.numeric(ellipsoid_grp$glassType)   ) rgl::points3d(   x = glass$SiO2,    y = glass$Na2O,    z = glass$Fe2O3,    col = as.numeric(glass$glassType),   size = 5   ) rgl::view3d(theta = 260, phi = 30, fov = 60, zoom = .85)"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/ConfidenceEllipse-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ConfidenceEllipse: Computation of 2D and 3D Elliptical Joint Confidence Regions — ConfidenceEllipse-package","title":"ConfidenceEllipse: Computation of 2D and 3D Elliptical Joint Confidence Regions — ConfidenceEllipse-package","text":"Computing elliptical joint confidence regions specified confidence level. provides flexibility estimate either classical robust confidence regions, can visualized 2D 3D plots. classical approach assumes normality uses mean covariance matrix define confidence regions. Alternatively, robustified version employs estimators like minimum covariance determinant (MCD) M-estimator, making less sensitive outliers departures normality. Furthermore, functions allow users group dataset based categorical variables estimate separate confidence regions group. capability particularly useful exploring potential differences similarities across subgroups within dataset. Varmuza Filzmoser (2009, ISBN:978-1-4200-5947-2). Johnson Wichern (2007, ISBN:0-13-187715-1). Raymaekers Rousseeuw (2019) doi:10.1080/00401706.2019.1677270 .","code":""},{"path":[]},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/ConfidenceEllipse-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ConfidenceEllipse: Computation of 2D and 3D Elliptical Joint Confidence Regions — ConfidenceEllipse-package","text":"Maintainer: Christian L. Goueguel christian.goueguel@gmail.com (ORCID)","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Ellipse Coordinates — confidence_ellipse","title":"Confidence Ellipse Coordinates — confidence_ellipse","text":"Compute coordinate points confidence ellipses specified confidence level.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Ellipse Coordinates — confidence_ellipse","text":"","code":"confidence_ellipse(   .data,   x,   y,   .group_by = NULL,   conf_level = 0.95,   robust = FALSE,   distribution = \"normal\" )"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Ellipse Coordinates — confidence_ellipse","text":".data data frame tibble. x column name x-axis variable. y column name y-axis variable. .group_by column name grouping variable (NULL default). Note grouping variable must factor. conf_level confidence level ellipse (0.95 default). robust optional (FALSE default). set TRUE, indicates robust estimation method employed calculate coordinates ellipse. location estimated using 1-step M-estimator biweight psi function, scale estimated using Minimum Covariance Determinant (MCD) estimator. approach resistant outliers provides reliable ellipse boundaries data contains extreme values follows non-normal distribution. distribution optional (\"normal\" default). distribution used calculate quantile ellipse. can either \"normal\" \"hotelling\".","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Ellipse Coordinates — confidence_ellipse","text":"Data frame coordinates points.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Ellipse Coordinates — confidence_ellipse","text":"function computes coordinates confidence ellipse based specified confidence level provided data. can handle classical robust estimation methods, supports grouping factor variable. distribution parameter controls statistical approach used ellipse calculation. \"normal\" option uses chi-square distribution quantile, appropriate working large samples. Whereas \"hotelling\" option uses Hotelling's T² distribution quantile. approach accounts uncertainty estimating mean covariance sample data, producing larger ellipses better reflect sampling uncertainty. statistically rigorous smaller sample sizes parameter estimation uncertainty higher. combination distribution = \"hotelling\" robust = TRUE offers conservative statistically rigorous approach, particularly recommended exploratory data analysis dealing datasets may meet ideal statistical assumptions. large samples, default settings (distribution = \"normal\", robust = FALSE) may sufficient, differences methods diminish increasing sample size.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipse.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Ellipse Coordinates — confidence_ellipse","text":"Raymaekers, J., Rousseeuw P.J. (2019). Fast robust correlation high dimensional data. Technometrics, 63(2), 184-198. Brereton, R. G. (2016). Hotelling’s T-squared distribution, relationship F distribution use multivariate space. Journal Chemometrics, 30(1), 18–21.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Confidence Ellipse Coordinates — confidence_ellipse","text":"Christian L. Goueguel","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Ellipse Coordinates — confidence_ellipse","text":"","code":"# Data data(\"glass\", package = \"ConfidenceEllipse\") # Confidence ellipse ellipse <- confidence_ellipse(.data = glass, x = SiO2, y = Na2O) ellipse_grp <- confidence_ellipse( .data = glass, x = SiO2, y = Na2O, .group_by = glassType )"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipsoid.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Ellipsoid Coordinates — confidence_ellipsoid","title":"Confidence Ellipsoid Coordinates — confidence_ellipsoid","text":"Compute coordinate points confidence ellipsoids specified confidence level.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipsoid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Ellipsoid Coordinates — confidence_ellipsoid","text":"","code":"confidence_ellipsoid(   .data,   x,   y,   z,   .group_by = NULL,   conf_level = 0.95,   robust = FALSE,   distribution = \"normal\" )"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipsoid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Ellipsoid Coordinates — confidence_ellipsoid","text":".data data frame tibble. x column name x-axis variable. y column name y-axis variable. z column name z-axis variable. .group_by column name grouping variable (NULL default). Note grouping variable must factor. conf_level confidence level ellipsoid (0.95 default). robust optional (FALSE default). set TRUE, indicates robust estimation method employed calculate coordinates ellipse. location estimated using 1-step M-estimator biweight psi function, scale estimated using Minimum Covariance Determinant (MCD) estimator. approach resistant outliers provides reliable ellipse boundaries data contains extreme values follows non-normal distribution. distribution optional (\"normal\" default). distribution used calculate quantile ellipse. can either \"normal\" \"hotelling\".","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipsoid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Ellipsoid Coordinates — confidence_ellipsoid","text":"Data frame coordinates points.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipsoid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Ellipsoid Coordinates — confidence_ellipsoid","text":"function computes coordinates confidence ellipse based specified confidence level provided data. can handle classical robust estimation methods, supports grouping factor variable. distribution parameter controls statistical approach used ellipse calculation. \"normal\" option uses chi-square distribution quantile, appropriate working large samples. Whereas \"hotelling\" option uses Hotelling's T² distribution quantile. approach accounts uncertainty estimating mean covariance sample data, producing larger ellipses better reflect sampling uncertainty. statistically rigorous smaller sample sizes parameter estimation uncertainty higher. combination distribution = \"hotelling\" robust = TRUE offers conservative statistically rigorous approach, particularly recommended exploratory data analysis dealing datasets may meet ideal statistical assumptions. large samples, default settings (distribution = \"normal\", robust = FALSE) may sufficient, differences methods diminish increasing sample size.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipsoid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Ellipsoid Coordinates — confidence_ellipsoid","text":"Raymaekers, J., Rousseeuw P.J. (2019). Fast robust correlation high dimensional data. Technometrics, 63(2), 184-198. Brereton, R. G. (2016). Hotelling’s T-squared distribution, relationship F distribution use multivariate space. Journal Chemometrics, 30(1), 18–21.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipsoid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Confidence Ellipsoid Coordinates — confidence_ellipsoid","text":"Christian L. Goueguel","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/confidence_ellipsoid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Ellipsoid Coordinates — confidence_ellipsoid","text":"","code":"# Data data(\"glass\", package = \"ConfidenceEllipse\") # Confidence ellipsoid ellipsoid <- confidence_ellipsoid(.data = glass, x = SiO2, y = Na2O, z = Fe2O3) ellipsoid_grp <- confidence_ellipsoid( .data = glass, x = SiO2, y = Na2O, z = Fe2O3, .group_by = glassType )"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/glass.html","id":null,"dir":"Reference","previous_headings":"","what":"Glass Vessels Data — glass","title":"Glass Vessels Data — glass","text":"dataset comprised 13 different measurements 180 archaeological glass vessels different groups (Janssen, K.H.., De Raedt, ., Schalm, O., Veeckman, J.: Microchim. Acta 15 (suppl.) (1998) 253-267. Compositions 15th - 17th century archaeological glass vessels excavated Antwerp.).","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/glass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glass Vessels Data — glass","text":"","code":"glass"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/glass.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Glass Vessels Data — glass","text":"Data frame 180 rows 14 columns.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/news/index.html","id":"confidenceellipse-110","dir":"Changelog","previous_headings":"","what":"ConfidenceEllipse 1.1.0","title":"ConfidenceEllipse 1.1.0","text":"Added distribution parameter confidence_ellipse() confidence_ellipsoid functions allowing users choose \"normal\" \"hotelling\" (Hotelling’s T²) distributions ellipse calculation. Enhanced statistical rigor: Hotelling’s T² distribution now properly accounts parameter estimation uncertainty small sample sizes. Updated documentation detailed explanations distribution choices robust methods. Added recommendations parameter selection based sample size data characteristics. Change name transform_data helper function transform_2d transform_3d clarity consistency.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/news/index.html","id":"confidenceellipse-100","dir":"Changelog","previous_headings":"","what":"ConfidenceEllipse 1.0.0","title":"ConfidenceEllipse 1.0.0","text":"CRAN release: 2024-04-22 Added robust parameter confidence_ellipse() confidence_ellipsoid functions enabling robust estimation methods using 1-step M-estimator biweight psi function location Minimum Covariance Determinant (MCD) estimator scale. Improved handling outliers non-normal data robust estimation options. Enhanced documentation examples demonstrating use robust methods. CRAN release comprehensive vignettes examples.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/news/index.html","id":"confidenceellipse-021","dir":"Changelog","previous_headings":"","what":"ConfidenceEllipse 0.2.1","title":"ConfidenceEllipse 0.2.1","text":"Improved code transform_data helper function.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/news/index.html","id":"confidenceellipse-020","dir":"Changelog","previous_headings":"","what":"ConfidenceEllipse 0.2.0","title":"ConfidenceEllipse 0.2.0","text":"Added transform_data helper function streamline data transformation processes.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/news/index.html","id":"confidenceellipse-014","dir":"Changelog","previous_headings":"","what":"ConfidenceEllipse 0.1.4","title":"ConfidenceEllipse 0.1.4","text":"Modified package logo include visually appealing design. Updated package description better reflect functionality features package.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/news/index.html","id":"confidenceellipse-013","dir":"Changelog","previous_headings":"","what":"ConfidenceEllipse 0.1.3","title":"ConfidenceEllipse 0.1.3","text":"Cleaned code improved performance confidence_ellipse() confidence_ellipsoid() functions.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/news/index.html","id":"confidenceellipse-012","dir":"Changelog","previous_headings":"","what":"ConfidenceEllipse 0.1.2","title":"ConfidenceEllipse 0.1.2","text":"Introduced confidence_ellipse() function 2D confidence ellipse calculations. Introduced confidence_ellipsoid() function 3D confidence ellipsoid calculations.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/news/index.html","id":"confidenceellipse-011","dir":"Changelog","previous_headings":"","what":"ConfidenceEllipse 0.1.1","title":"ConfidenceEllipse 0.1.1","text":"Fixed bug confidence_ellipse() function conf_level parameter correctly applied.","code":""},{"path":"https://christiangoueguel.github.io/ConfidenceEllipse/news/index.html","id":"confidenceellipse-010","dir":"Changelog","previous_headings":"","what":"ConfidenceEllipse 0.1.0","title":"ConfidenceEllipse 0.1.0","text":"Initial release ConfidenceEllipse package.","code":""}]
